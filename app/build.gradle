apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def playStoreBaseUrl = "https://play.google.com/store/apps/details?id="
def backendBaseUrlDEV = "https://tarotdroidtestapp.appspot.com"
def backendBaseUrlPROD = "https://tarotdroid.appspot.com"

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.2"

    defaultConfig {
        applicationId "org.nla.tarotdroid"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 35
        versionName "5.0.0"
        multiDexEnabled true

        resValue "string", "app_name", "TarotDroid"
        buildConfigField "String", "APP_LOG_TAG", "\"${applicationId}\""
        def playStoreAppUrl = playStoreBaseUrl + applicationId
        buildConfigField "boolean", "IS_FULL", "false"
        buildConfigField "String", "PLAYSTORE_APP_URL", "\"${playStoreAppUrl}\""
        buildConfigField "String", "APP_VERSION", "\"${versionName}\""
        buildConfigField "String", "APP_ID", "\"${applicationId}\""
        buildConfigField "String", "BLUETOOTH_UUID", "\"00001101-0000-1000-8000-00805F9B34FB\""
        buildConfigField "String", "BLUETOOTH_SERVICE", "\"TarotDroidService\""
        buildConfigField "String", "FLURRY_APP_ID", "\"JA7HZLWC2VU8V1AGBVQL\""
        buildConfigField "String", "BACKEND_BASE_URL", "\"${backendBaseUrlDEV}\""
    }

    signingConfigs {
        debug {
            storeFile file('../keystore/debug.keystore')
        }
        release {
            keyAlias 'fakeAlias'
            keyPassword "fakeKey"
            storeFile file('../keystore/tarotdroid.keystore')
            storePassword "fakePassword"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        lite {
            buildConfigField "boolean", "IS_IN_DEV_MODE", "false"
        }
        liteAndDevMode {
            buildConfigField "boolean", "IS_IN_DEV_MODE", "true"
        }
        full {
            applicationId "org.nla.tarotdroid.full"
            def playStoreAppUrl = playStoreBaseUrl + applicationId
            resValue "string", "app_name", "TarotDroid Full"
            buildConfigField "boolean", "IS_IN_DEV_MODE", "false"
            buildConfigField "boolean", "IS_FULL", "true"
            buildConfigField "String", "PLAYSTORE_APP_URL", "\"${playStoreAppUrl}\""
            buildConfigField "String", "FLURRY_APP_ID", "\"XXX\""
            buildConfigField "String", "BACKEND_BASE_URL", "\"${backendBaseUrlPROD}\""
        }
        fullAndDevMode {
            applicationId "org.nla.tarotdroid.full"
            def playStoreAppUrl = playStoreBaseUrl + applicationId
            resValue "string", "app_name", "TarotDroid Full"
            buildConfigField "boolean", "IS_IN_DEV_MODE", "true"
            buildConfigField "boolean", "IS_FULL", "true"
            buildConfigField "String", "PLAYSTORE_APP_URL", "\"${playStoreAppUrl}\""
            buildConfigField "String", "FLURRY_APP_ID", "\"XXX\""
            buildConfigField "String", "BACKEND_BASE_URL", "\"${backendBaseUrlPROD}\""
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libaFileChooser-release')

    // tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.assertj:assertj-core:1.7.1'

    // android
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.takisoft.fix:preference-v7:23.4.0.5'

    // autres
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    apt 'com.google.dagger:dagger-compiler:2.5'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.google.guava:guava:19.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'ch.acra:acra:4.9.0'
    compile 'com.google.dagger:dagger:2.5'
    provided 'javax.annotation:jsr250-api:1.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.3@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.10@aar') {
        transitive = true;
    }
    compile 'com.flurry.android:analytics:6.3.1'
    compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
}
